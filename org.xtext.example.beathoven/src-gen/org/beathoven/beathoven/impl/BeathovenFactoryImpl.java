/**
 * generated by Xtext 2.38.0
 */
package org.beathoven.beathoven.impl;

import org.beathoven.beathoven.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BeathovenFactoryImpl extends EFactoryImpl implements BeathovenFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static BeathovenFactory init()
  {
    try
    {
      BeathovenFactory theBeathovenFactory = (BeathovenFactory)EPackage.Registry.INSTANCE.getEFactory(BeathovenPackage.eNS_URI);
      if (theBeathovenFactory != null)
      {
        return theBeathovenFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new BeathovenFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BeathovenFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case BeathovenPackage.MODEL: return createModel();
      case BeathovenPackage.BLOCK: return createBlock();
      case BeathovenPackage.TEMPO: return createTempo();
      case BeathovenPackage.TIME: return createTime();
      case BeathovenPackage.KEY: return createKey();
      case BeathovenPackage.TITLE: return createTitle();
      case BeathovenPackage.INSTRUMENT: return createInstrument();
      case BeathovenPackage.NOTE_STMT: return createNoteStmt();
      case BeathovenPackage.REST: return createRest();
      case BeathovenPackage.CHORD: return createChord();
      case BeathovenPackage.REPEAT: return createRepeat();
      case BeathovenPackage.MARK: return createMark();
      case BeathovenPackage.GOTO: return createGoto();
      case BeathovenPackage.NOTE_VALUE: return createNoteValue();
      case BeathovenPackage.DURATION: return createDuration();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Block createBlock()
  {
    BlockImpl block = new BlockImpl();
    return block;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Tempo createTempo()
  {
    TempoImpl tempo = new TempoImpl();
    return tempo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Time createTime()
  {
    TimeImpl time = new TimeImpl();
    return time;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Key createKey()
  {
    KeyImpl key = new KeyImpl();
    return key;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Title createTitle()
  {
    TitleImpl title = new TitleImpl();
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Instrument createInstrument()
  {
    InstrumentImpl instrument = new InstrumentImpl();
    return instrument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NoteStmt createNoteStmt()
  {
    NoteStmtImpl noteStmt = new NoteStmtImpl();
    return noteStmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Rest createRest()
  {
    RestImpl rest = new RestImpl();
    return rest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Chord createChord()
  {
    ChordImpl chord = new ChordImpl();
    return chord;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Repeat createRepeat()
  {
    RepeatImpl repeat = new RepeatImpl();
    return repeat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Mark createMark()
  {
    MarkImpl mark = new MarkImpl();
    return mark;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Goto createGoto()
  {
    GotoImpl goto_ = new GotoImpl();
    return goto_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NoteValue createNoteValue()
  {
    NoteValueImpl noteValue = new NoteValueImpl();
    return noteValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Duration createDuration()
  {
    DurationImpl duration = new DurationImpl();
    return duration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BeathovenPackage getBeathovenPackage()
  {
    return (BeathovenPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static BeathovenPackage getPackage()
  {
    return BeathovenPackage.eINSTANCE;
  }

} //BeathovenFactoryImpl
